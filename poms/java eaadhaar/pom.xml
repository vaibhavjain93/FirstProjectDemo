<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	Author : 
		Rahul Tiwari
	
	Note:
		For build profiles, please refer following files
			1. maven.build.dev.properties
			2. maven.build.prod.properties
		
	Commands:
		(1) WAR file For "Production" Environment  : mvn clean package -Pproduction
		(2) WAR file For "Development" Environment : mvn clean package -Pdevelopment
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>in.gov.uidai</groupId>
	<artifactId>eaadhaar</artifactId>
	<packaging>war</packaging>
	<version>0.1</version>
	<name>eaadhaar</name>

	<properties>
		<jdk.version>1.6</jdk.version>
		
		<junit.version>4.11</junit.version>
		<log4j.version>1.2.17</log4j.version>
		
		<javax.servlet-api.version>3.0.1</javax.servlet-api.version>
		<jsp-api.version>2.0</jsp-api.version>
		<jstl.version>1.2</jstl.version>
		
		<com.google.zxing.version>2.1</com.google.zxing.version>
		<com.itextpdf.version>5.2.1</com.itextpdf.version> <!-- 5.4.0 | 5.1.2 -->
		<com.lowagie.version>4.2.0</com.lowagie.version> <!-- 4.2.0 | 2.1.7-->
		
		<commons-codec.version>1.7</commons-codec.version>
		<commons-io.version>2.4</commons-io.version>
		<commons-exec.version>1.1</commons-exec.version>
		
		<org.apache.velocity.version>1.7</org.apache.velocity.version>
		
		<org.bouncycastle.version>1.46</org.bouncycastle.version>
		
		<org.springframework.version>3.2.2.RELEASE</org.springframework.version>
		
		<mysql.driver.version>5.1.9</mysql.driver.version>
		<hibernate-core.version>4.1.10.Final</hibernate-core.version>
		<c3p0.version>0.9.1.2</c3p0.version>
		<slf4j-log4j12.version>1.6.1</slf4j-log4j12.version> <!-- SLF4J LOG4J-12 Binding 1.7.3-->
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<dependencies>

		<!-- ************* JUNIT DEPENDENCIES ************* -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.12.1.GA</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		
		<!-- ************* LOG4J DEPENDENCIES ************* -->
		<dependency>
	    	<groupId>log4j</groupId>
	    	<artifactId>log4j</artifactId>
	    	<version>${log4j.version}</version>
	    	<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
		</dependency>		
			
		<!-- ************* SERVLET DEPENDENCIES ************* -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>${jsp-api.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
        
		<!-- ************* ZXING API DEPENDENCIES ************* -->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>core</artifactId>
			<version>${com.google.zxing.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>${com.google.zxing.version}</version>
		</dependency>
		
		<!-- ************* iText / iTextPDF API DEPENDENCIES ************* -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>${com.itextpdf.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcmail-jdk14</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcprov-jdk14</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bctsp-jdk14</artifactId>
				</exclusion>
			</exclusions>			
		</dependency>
		
        <dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>${com.lowagie.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcmail-jdk14</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcprov-jdk14</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bctsp-jdk14</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- ************* Apache Commons Codec DEPENDENCIES ************* -->
		<!-- 
			Apache Commons Codec: The codec package contains simple encoder and decoders for various formats such as Base64 and Hexadecimal. 
		 -->
		 <dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>${commons-codec.version}</version>
		</dependency>
		
		<!-- ************* Apache Commons IO DEPENDENCIES ************* -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		
		<!-- ************* Apache commons-exec DEPENDENCIES ************* -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
			<version>${commons-exec.version}</version>
		</dependency>
            
        <!-- ************* VELOCITY API DEPENDENCIES ************* -->
        <dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>${org.apache.velocity.version}</version>
		</dependency>
        
        <!-- ************* Bouncy Castle CMS and S/MIME API DEPENDENCIES ************* -->
		 <dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcmail-jdk16</artifactId>
			<version>${org.bouncycastle.version}</version>
		</dependency>
		
		<!-- ************* Bouncy Castle Provider DEPENDENCIES ************* -->
 		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk16</artifactId>
			<version>${org.bouncycastle.version}</version>
		</dependency>
		
		<!-- ************* Bouncy Castle OpenPGP API DEPENDENCIES ************* -->
 		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bctsp-jdk16</artifactId>
			<version>${org.bouncycastle.version}</version>
		</dependency>
            
        <!-- ************* SPRING API DEPENDENCIES ************* -->
        <!--
    		Core utilities used by other modules.
    		Define this if you use Spring Utility APIs 
    		(org.springframework.core.*/org.springframework.util.*)
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-core</artifactId>
  			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--
    		Expression Language (depends on spring-core)
    		Define this if you use Spring Expression APIs (org.springframework.expression.*)
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-expression</artifactId>
  			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--
    		Bean Factory and JavaBeans utilities (depends on spring-core)
    		Define this if you use Spring Bean APIs (org.springframework.beans.*)
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-beans</artifactId>
  			<version>${org.springframework.version}</version>
		</dependency>
		
		<!--
    		Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
    		Define this if you use Spring AOP APIs (org.springframework.aop.*)
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-aop</artifactId>
  			<version>${org.springframework.version}</version>
		</dependency>
 
		<!--
    		Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
    		This is the central artifact for Spring's Dependency Injection Container and is generally always defined
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-context</artifactId>
  			<version>${org.springframework.version}</version>
		</dependency>
 
		<!--
    		Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
    		Define this if you need any of these integrations
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-context-support</artifactId>
  			<version>${org.springframework.version}</version>
		</dependency>
 
		<!--
    		Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
    		Define this if you use Spring Transactions or DAO Exception Hierarchy
    		(org.springframework.transaction.*/org.springframework.dao.*)
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-tx</artifactId>
  			<version>${org.springframework.version}</version>
		</dependency>
 
		<!--
    		JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
    		Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-jdbc</artifactId>
  			<version>${org.springframework.version}</version>
		</dependency>
 
		<!--
    		Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
    		(depends on spring-core, spring-beans, spring-context, spring-tx)
    		Define this if you need ORM (org.springframework.orm.*)
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-orm</artifactId>
  			<version>${org.springframework.version}</version>
		</dependency>
 
		<!--
    		Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
    		(depends on spring-core, spring-beans, spring-context)
    		Define this if you need OXM (org.springframework.oxm.*)
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-oxm</artifactId>
  			<version>${org.springframework.version}</version>
		</dependency>
 
		<!--
    		Web application development utilities applicable to both Servlet and Portlet Environments
    		(depends on spring-core, spring-beans, spring-context)
    		Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-web</artifactId>
  			<version>${org.springframework.version}</version>
			</dependency>
 
		<!--
    		Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
    		Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-webmvc</artifactId>
  			<version>${org.springframework.version}</version>
		</dependency>
 
		<!--
    		Spring MVC for Portlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
    		Define this if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*)
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-webmvc-portlet</artifactId>
  			<version>${org.springframework.version}</version>
		</dependency>
 
		<!--
    		Support for testing Spring applications with tools such as JUnit and TestNG
    		This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
		-->
		<dependency>
  			<groupId>org.springframework</groupId>
  			<artifactId>spring-test</artifactId>
  			<version>${org.springframework.version}</version>
  			<scope>test</scope>
		</dependency>
		<!-- ************* - END - SPRING API DEPENDENCIES ************* -->
		
		<!-- ************* MySQL DATABASE DRIVER DEPENDENCIES ************* -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.driver.version}</version>
		</dependency>
		
		<!-- ************* HIBERNATE / C3P0 DEPENDENCIES ************* -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate-core.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>4.1.10.Final</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>2.4.4</version>
		</dependency>		
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>${c3p0.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j-log4j12.version}</version>
		</dependency>

	</dependencies>

	<profiles>

		<!-- This Profile will build WAR file for Development Environment-->
	 	<profile>
	 		<id>development</id>
	 		
			<build>
				<finalName>${project.artifactId}</finalName>
				<plugins>
					<plugin>
					    <groupId>org.apache.maven.plugins</groupId>
					    <artifactId>maven-compiler-plugin</artifactId>
					    <version>3.0</version>
					    <configuration>
					        <source>${jdk.version}</source>
					        <target>${jdk.version}</target>
					    </configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.5</version>
					</plugin>
 					<plugin>
        				<groupId>org.apache.maven.plugins</groupId>
        				<artifactId>maven-war-plugin</artifactId>
        				<version>2.1.1</version>
        				<configuration>
        					<filters>
            					<filter>maven.build.dev.properties</filter>
          					</filters>
          					<webResources>
            					<!-- 		
            					<resource>
            						<directory>src/main/webapp/resources</directory>
					              	<filtering>false</filtering>
            					</resource> 
            					-->
            					<resource>
            						<directory>src/main/webapp/WEB-INF</directory>
					              	<filtering>true</filtering>
					              	<targetPath>WEB-INF</targetPath>
					              	<!-- 
					              	<excludes>
                						<exclude>**/jsp</exclude>
              						</excludes>
              						-->
			            		</resource>
			          		</webResources>
			        	</configuration>
			      	</plugin>
				</plugins>
			    
			    <filters>
		      		<filter>maven.build.dev.properties</filter>
		    	</filters>
				<resources>
		      		<resource>
		        		<directory>src/main/resources</directory>
		        		<filtering>true</filtering>
		        		<includes>
		          			<include>**/*.xml</include>
		          			<include>**/*.txt</include>
		          			<include>**/*.properties</include>
		          			<include>**/*.vm</include>
		        		</includes>
		        	</resource>
		        	<resource>
            			<directory>src/main/resources/images</directory>
            			<targetPath>images</targetPath>
            			<filtering>false</filtering>
            		</resource>
		        	<resource>
            			<directory>src/main/resources/certificate</directory>
            			<targetPath>certificate</targetPath>
            			<filtering>false</filtering>
            		</resource>            		
		    	</resources>
			</build>
		</profile>
		
		<!-- This Profile will build WAR file for Production Environment-->
	 	<profile>
	 		<id>production</id>
	 		
			<build>
				<finalName>${project.artifactId}</finalName>
				<plugins>
					<plugin>
					    <groupId>org.apache.maven.plugins</groupId>
					    <artifactId>maven-compiler-plugin</artifactId>
					    <version>3.0</version>
					    <configuration>
					        <source>${jdk.version}</source>
					        <target>${jdk.version}</target>
					    </configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.5</version>
					</plugin>
 					<plugin>
        				<groupId>org.apache.maven.plugins</groupId>
        				<artifactId>maven-war-plugin</artifactId>
        				<version>2.3</version>
        				<configuration>
        					<filters>
            					<filter>maven.build.prod.properties</filter>
          					</filters>
          					<webResources>
            					<resource>
            						<directory>src/main/webapp/WEB-INF</directory>
					              	<filtering>true</filtering>
					              	<targetPath>WEB-INF</targetPath>
					              	 <!-- 
					              	 <excludes>
                						<exclude>**/jsp</exclude>
                					</excludes>
                					-->
			            		</resource>
			          		</webResources>
			        	</configuration>
			      	</plugin>
			    </plugins>
			    
			    <filters>
		      		<filter>maven.build.prod.properties</filter>
		    	</filters>
				<resources>
		      		<resource>
		        		<directory>src/main/resources</directory>
		        		<filtering>true</filtering>
		        		<includes>
		          			<include>**/*.xml</include>
		          			<include>**/*.txt</include>
		          			<include>**/*.properties</include>
		          			<include>**/*.vm</include>
		        		</includes>
		        	</resource>
		        	<resource>
            			<directory>src/main/resources/images</directory>
            			<targetPath>images</targetPath>
            			<filtering>false</filtering>
            		</resource>
		        	<resource>
            			<directory>src/main/resources/certificate</directory>
            			<targetPath>certificate</targetPath>
            			<filtering>false</filtering>
            		</resource>            		
		    	</resources>
			</build>
		</profile>
		
	</profiles>

</project>